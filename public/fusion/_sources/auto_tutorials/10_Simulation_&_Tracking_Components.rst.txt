
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_tutorials/10_Simulation_&_Tracking_Components.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_tutorials_10_Simulation_&_Tracking_Components.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorials_10_Simulation_&_Tracking_Components.py:


=============================================================
10 - Tracking in simulation: bringing all components together
=============================================================
The previous tutorials have introduced various aspects of SMART FUSION covering inference and data
association for multiple-target trackers, using simulated data. This tutorial consolidates those
aspects in a notebook which can be modified to individual need. It contains all aspects
introduced in previous tutorials, and nothing new.

.. GENERATED FROM PYTHON SOURCE LINES 14-37

Process
-------
This notebook, as with the previous, proceeds according to the following steps:

1. Create the simulation

  * Initialise the 'playing field'
  * Choose number of targets and initial states
  * Create some transition models
  * Create some sensor models

2. Initialise the tracker components

  * Initialise predictors
  * Initialise updaters
  * Initialise data associations, hypothesisers
  * Initiators and deleters
  * Create the tracker

3. Run the tracker

  * Plot the output


.. GENERATED FROM PYTHON SOURCE LINES 39-41

Create the simulation
-----------------------

.. GENERATED FROM PYTHON SOURCE LINES 43-44

Separate out the imports

.. GENERATED FROM PYTHON SOURCE LINES 44-47

.. code-block:: default

    import numpy as np
    import datetime








.. GENERATED FROM PYTHON SOURCE LINES 48-54

Initialise ground truth
^^^^^^^^^^^^^^^^^^^^^^^
Here are some configurable parameters associated with the ground truth, e.g. defining where
tracks are born and at what rate, death probability. This follows similar logic to the code
in previous tutorial section :ref:`auto_tutorials/09_Initiators_&_Deleters:Simulating Multiple
Targets`.

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default

    from smartfusion.types.array import StateVector, CovarianceMatrix
    from smartfusion.types.state import GaussianState
    initial_state_mean = StateVector([[0], [0], [0], [0]])
    initial_state_covariance = CovarianceMatrix(np.diag([4, 0.5, 4, 0.5]))
    timestep_size = datetime.timedelta(seconds=5)
    number_of_steps = 20
    birth_rate = 0.3
    death_probability = 0.05
    initial_state = GaussianState(initial_state_mean, initial_state_covariance)








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Create the transition model - default set to 2d nearly-constant velocity with small (0.05)
variance.

.. GENERATED FROM PYTHON SOURCE LINES 67-72

.. code-block:: default

    from smartfusion.models.transition.linear import (
        CombinedLinearGaussianTransitionModel, ConstantVelocity)
    transition_model = CombinedLinearGaussianTransitionModel(
        [ConstantVelocity(0.05), ConstantVelocity(0.05)])








.. GENERATED FROM PYTHON SOURCE LINES 73-74

Put this all together in a multi-target simulator.

.. GENERATED FROM PYTHON SOURCE LINES 74-84

.. code-block:: default

    from smartfusion.simulator.simple import MultiTargetGroundTruthSimulator
    groundtruth_sim = MultiTargetGroundTruthSimulator(
        transition_model=transition_model,
        initial_state=initial_state,
        timestep=timestep_size,
        number_steps=number_of_steps,
        birth_rate=birth_rate,
        death_probability=death_probability
    )








.. GENERATED FROM PYTHON SOURCE LINES 85-91

Initialise the measurement models
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
The simulated ground truth will then be passed to a simple detection simulator. This again has a
number of configurable parameters, e.g. where clutter is generated and at what rate, and
detection probability. This implements similar logic to the code in the previous tutorial section
:ref:`auto_tutorials/09_Initiators_&_Deleters:Generate Detections and Clutter`.

.. GENERATED FROM PYTHON SOURCE LINES 91-105

.. code-block:: default

    from smartfusion.simulator.simple import SimpleDetectionSimulator
    from smartfusion.models.measurement.linear import LinearGaussian

    # initialise the measurement model
    measurement_model_covariance = np.diag([0.25, 0.25])
    measurement_model = LinearGaussian(4, [0, 2], measurement_model_covariance)

    # probability of detection
    probability_detection = 0.9

    # clutter will be generated uniformly in this are around the target
    clutter_area = np.array([[-1, 1], [-1, 1]])*30
    clutter_rate = 1








.. GENERATED FROM PYTHON SOURCE LINES 106-107

The detection simulator

.. GENERATED FROM PYTHON SOURCE LINES 107-115

.. code-block:: default

    detection_sim = SimpleDetectionSimulator(
        groundtruth=groundtruth_sim,
        measurement_model=measurement_model,
        detection_probability=probability_detection,
        meas_range=clutter_area,
        clutter_rate=clutter_rate
    )








.. GENERATED FROM PYTHON SOURCE LINES 116-121

Create the tracker components
-----------------------------
In this example a Kalman filter is used with global nearest neighbour (GNN) associator. Other
options are, of course, available.


.. GENERATED FROM PYTHON SOURCE LINES 123-127

Predictor
^^^^^^^^^
Initialise the predictor using the same transition model as generated the ground truth. Note you
don't have to use the same model.

.. GENERATED FROM PYTHON SOURCE LINES 127-130

.. code-block:: default

    from smartfusion.predictor.kalman import KalmanPredictor
    predictor = KalmanPredictor(transition_model)








.. GENERATED FROM PYTHON SOURCE LINES 131-135

Updater
^^^^^^^
Initialise the updater using the same measurement model as generated the simulated detections.
Note, again, you don't have to use the same model (noise covariance).

.. GENERATED FROM PYTHON SOURCE LINES 135-138

.. code-block:: default

    from smartfusion.updater.kalman import KalmanUpdater
    updater = KalmanUpdater(measurement_model)








.. GENERATED FROM PYTHON SOURCE LINES 139-144

Data associator
^^^^^^^^^^^^^^^
Initialise a hypothesiser which will rank predicted measurement - measurement pairs according to
some measure.
Initialise a Mahalanobis distance measure to facilitate this ranking.

.. GENERATED FROM PYTHON SOURCE LINES 144-148

.. code-block:: default

    from smartfusion.hypothesiser.distance import DistanceHypothesiser
    from smartfusion.measures import Mahalanobis
    hypothesiser = DistanceHypothesiser(predictor, updater, measure=Mahalanobis(), missed_distance=3)








.. GENERATED FROM PYTHON SOURCE LINES 149-150

Initialise the GNN with the hypothesiser.

.. GENERATED FROM PYTHON SOURCE LINES 150-154

.. code-block:: default

    from smartfusion.dataassociator.neighbour import GNNWith2DAssignment
    data_associator = GNNWith2DAssignment(hypothesiser)









.. GENERATED FROM PYTHON SOURCE LINES 155-158

Initiator and Deleter
^^^^^^^^^^^^^^^^^^^^^
Create deleter - get rid of anything with a covariance trace greater than 2

.. GENERATED FROM PYTHON SOURCE LINES 158-162

.. code-block:: default

    from smartfusion.deleter.error import CovarianceBasedDeleter
    covariance_limit_for_delete = 2
    deleter = CovarianceBasedDeleter(covar_trace_thresh=covariance_limit_for_delete)








.. GENERATED FROM PYTHON SOURCE LINES 163-165

Set a standard prior state and the minimum number of detections required to qualify for
initiation

.. GENERATED FROM PYTHON SOURCE LINES 165-168

.. code-block:: default

    s_prior_state = GaussianState([[0], [0], [0], [0]], np.diag([0, 0.5, 0, 0.5]))
    min_detections = 3








.. GENERATED FROM PYTHON SOURCE LINES 169-171

Initialise the initiator - use the 'full tracker' components specified above in the initiator.
But note that other ones could be used if needed.

.. GENERATED FROM PYTHON SOURCE LINES 171-181

.. code-block:: default

    from smartfusion.initiator.simple import MultiMeasurementInitiator
    initiator = MultiMeasurementInitiator(
        prior_state=s_prior_state,
        measurement_model=measurement_model,
        deleter=deleter,
        data_associator=data_associator,
        updater=updater,
        min_points=min_detections
    )








.. GENERATED FROM PYTHON SOURCE LINES 182-187

Run the Tracker
---------------
With the components created, the multi-target tracker component is created, constructed from
the components specified above. This is logically the same as tracking code in the previous
tutorial section :ref:`auto_tutorials/09_Initiators_&_Deleters:Running the Tracker`

.. GENERATED FROM PYTHON SOURCE LINES 187-197

.. code-block:: default

    from smartfusion.tracker.simple import MultiTargetTracker

    tracker = MultiTargetTracker(
        initiator=initiator,
        deleter=deleter,
        detector=detection_sim,
        data_associator=data_associator,
        updater=updater,
    )








.. GENERATED FROM PYTHON SOURCE LINES 198-206

In the case of using (J)PDA like in :ref:`auto_tutorials/07_PDATutorial:Run the PDA Filter`
and :ref:`auto_tutorials/08_JPDATutorial:Running the JPDA filter`, then the
:class:`~.MultiTargetMixtureTracker` would be used instead on the
:class:`~.MultiTargetTracker` used above.

Plot the outputs
^^^^^^^^^^^^^^^^
We plot the ground truth, detections and the tracker output using the SMART FUSION :class:`Plotter`.

.. GENERATED FROM PYTHON SOURCE LINES 206-215

.. code-block:: default

    groundtruth = set()
    detections = set()
    tracks = set()

    for time, ctracks in tracker:
        groundtruth.update(groundtruth_sim.groundtruth_paths)
        detections.update(detection_sim.detections)
        tracks.update(ctracks)








.. GENERATED FROM PYTHON SOURCE LINES 216-223

.. code-block:: default

    from smartfusion.plotter import Plotterly

    plotter = Plotterly()
    plotter.plot_ground_truths(groundtruth, mapping=[0, 2])
    plotter.plot_measurements(detections, mapping=[0, 2])
    plotter.plot_tracks(tracks, mapping=[0, 2])
    plotter.fig





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>            <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG"></script><script type="text/javascript">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>                <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script src="https://cdn.plot.ly/plotly-2.12.1.min.js"></script>                <div id="aab8717d-10c8-4a2a-a11c-b508d5f61ea6" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("aab8717d-10c8-4a2a-a11c-b508d5f61ea6")) {                    Plotly.newPlot(                        "aab8717d-10c8-4a2a-a11c-b508d5f61ea6",                        [{"legendgroup":"Ground Truth","legendrank":100,"line":{"dash":"dash"},"mode":"lines","name":"Ground Truth","showlegend":true,"text":["GroundTruthState<br>[[1.43554434]\n [0.12437556]\n [4.21964118]\n [0.2461622 ]]<br>2022-09-23 01:31:23.555588<br>index: 0","GroundTruthState<br>[[2.24582605]\n [0.34881285]\n [8.60600579]\n [1.4399159 ]]<br>2022-09-23 01:31:28.555588<br>index: 0"],"x":[1.4355443397739085,2.2458260530794107],"y":[4.219641177003709,8.606005786321692],"type":"scatter"},{"legendgroup":"Ground Truth","legendrank":100,"line":{"dash":"dash"},"mode":"lines","name":"Ground Truth","showlegend":false,"text":["GroundTruthState<br>[[0.62796938]\n [0.16139307]\n [5.50660904]\n [0.71083781]]<br>2022-09-23 01:31:23.555588<br>index: 0","GroundTruthState<br>[[1.78274699]\n [0.25775722]\n [7.80732811]\n [0.52356571]]<br>2022-09-23 01:31:28.555588<br>index: 0"],"x":[0.6279693756502144,1.7827469943585075],"y":[5.506609044273153,7.8073281103082],"type":"scatter"},{"legendgroup":"Ground Truth","legendrank":100,"line":{"dash":"dash"},"mode":"lines","name":"Ground Truth","showlegend":false,"text":["GroundTruthState<br>[[2.12346273]\n [0.34886731]\n [0.9781538 ]\n [0.53825705]]<br>2022-09-23 01:29:58.555588<br>index: 0","GroundTruthState<br>[[4.75590042]\n [0.69049456]\n [2.9255482 ]\n [0.4679341 ]]<br>2022-09-23 01:30:03.555588<br>index: 0","GroundTruthState<br>[[10.47987179]\n [ 1.33538378]\n [ 6.14841361]\n [ 0.83184046]]<br>2022-09-23 01:30:08.555588<br>index: 0","GroundTruthState<br>[[16.41730155]\n [ 0.99385235]\n [11.9606896 ]\n [ 1.31494495]]<br>2022-09-23 01:30:13.555588<br>index: 0","GroundTruthState<br>[[20.0987126 ]\n [ 0.57565932]\n [17.66482286]\n [ 0.82585698]]<br>2022-09-23 01:30:18.555588<br>index: 0","GroundTruthState<br>[[24.47266524]\n [ 1.05524   ]\n [20.05406625]\n [ 0.35127839]]<br>2022-09-23 01:30:23.555588<br>index: 0","GroundTruthState<br>[[28.35633266]\n [ 0.46430135]\n [22.88884008]\n [ 0.30478023]]<br>2022-09-23 01:30:28.555588<br>index: 0","GroundTruthState<br>[[29.34065323]\n [ 0.05745603]\n [24.39449839]\n [ 0.46971725]]<br>2022-09-23 01:30:33.555588<br>index: 0","GroundTruthState<br>[[29.31381855]\n [-0.08217439]\n [27.10340747]\n [ 0.5774348 ]]<br>2022-09-23 01:30:38.555588<br>index: 0","GroundTruthState<br>[[27.30530975]\n [-0.37387074]\n [28.16687482]\n [-0.08507221]]<br>2022-09-23 01:30:43.555588<br>index: 0","GroundTruthState<br>[[28.02211463]\n [ 0.54880699]\n [30.22666532]\n [ 0.40158567]]<br>2022-09-23 01:30:48.555588<br>index: 0","GroundTruthState<br>[[2.94030281e+01]\n [2.68533272e-02]\n [3.46997962e+01]\n [1.14726706e+00]]<br>2022-09-23 01:30:53.555588<br>index: 0","GroundTruthState<br>[[29.71579077]\n [ 0.51967984]\n [41.8599455 ]\n [ 1.76015337]]<br>2022-09-23 01:30:58.555588<br>index: 0","GroundTruthState<br>[[34.14336731]\n [ 1.01398608]\n [49.88311834]\n [ 1.34937956]]<br>2022-09-23 01:31:03.555588<br>index: 0","GroundTruthState<br>[[38.73088599]\n [ 0.54419242]\n [55.7064106 ]\n [ 1.21579943]]<br>2022-09-23 01:31:08.555588<br>index: 0","GroundTruthState<br>[[ 3.93822893e+01]\n [-2.27592479e-02]\n [ 6.13838381e+01]\n [ 5.66253507e-01]]<br>2022-09-23 01:31:13.555588<br>index: 0","GroundTruthState<br>[[40.06955171]\n [ 0.28408187]\n [62.056698  ]\n [-0.16112923]]<br>2022-09-23 01:31:18.555588<br>index: 0","GroundTruthState<br>[[44.13739518]\n [ 1.25692061]\n [60.79133232]\n [-0.83576891]]<br>2022-09-23 01:31:23.555588<br>index: 0","GroundTruthState<br>[[49.32617224]\n [ 1.18414868]\n [55.81105456]\n [-1.22820029]]<br>2022-09-23 01:31:28.555588<br>index: 0"],"x":[2.1234627319619017,4.755900420091727,10.479871791837784,16.417301547241173,20.098712603099116,24.47266523974966,28.356332660879243,29.34065323279344,29.313818546073467,27.305309753885815,28.022114632810904,29.403028126745134,29.715790768428093,34.14336730980263,38.7308859879509,39.38228925183263,40.069551707333204,44.13739517584008,49.326172239028075],"y":[0.9781538013071052,2.9255482026154147,6.148413611977787,11.960689599228214,17.664822864076385,20.054066250333463,22.888840082444904,24.394498386704928,27.103407465995723,28.1668748218823,30.22666531980841,34.69979620739779,41.85994550349534,49.883118339686206,55.706410600079806,61.38383813203387,62.056698002003905,60.79133232086234,55.811054558528944],"type":"scatter"},{"legendgroup":"Ground Truth","legendrank":100,"line":{"dash":"dash"},"mode":"lines","name":"Ground Truth","showlegend":false,"text":["GroundTruthState<br>[[-4.10741801e+00]\n [ 1.27682265e-03]\n [ 3.43948643e+00]\n [-9.25970389e-02]]<br>2022-09-23 01:31:23.555588<br>index: 0","GroundTruthState<br>[[-2.43405989]\n [ 0.7227274 ]\n [ 3.30236205]\n [-0.0339817 ]]<br>2022-09-23 01:31:28.555588<br>index: 0"],"x":[-4.107418006632721,-2.4340598863163407],"y":[3.4394864346339777,3.302362048850464],"type":"scatter"},{"legendgroup":"Ground Truth","legendrank":100,"line":{"dash":"dash"},"mode":"lines","name":"Ground Truth","showlegend":false,"text":["GroundTruthState<br>[[-1.41219888]\n [ 0.09218112]\n [ 1.6081221 ]\n [ 0.2292835 ]]<br>2022-09-23 01:31:03.555588<br>index: 0","GroundTruthState<br>[[-1.18026761]\n [ 0.16342819]\n [ 1.13763735]\n [-0.66015418]]<br>2022-09-23 01:31:08.555588<br>index: 0","GroundTruthState<br>[[ 0.07068843]\n [ 0.56270084]\n [-3.0450028 ]\n [-0.81338887]]<br>2022-09-23 01:31:13.555588<br>index: 0","GroundTruthState<br>[[ 2.49218083]\n [ 0.26070758]\n [-8.45309881]\n [-1.30274815]]<br>2022-09-23 01:31:18.555588<br>index: 0","GroundTruthState<br>[[  5.18953972]\n [  0.75425665]\n [-15.71603402]\n [ -1.84827502]]<br>2022-09-23 01:31:23.555588<br>index: 0","GroundTruthState<br>[[  6.2769382 ]\n [ -0.14811431]\n [-25.78853422]\n [ -2.10630253]]<br>2022-09-23 01:31:28.555588<br>index: 0"],"x":[-1.412198878777894,-1.180267605134036,0.07068842731075292,2.492180831840023,5.18953971767449,6.276938196479282],"y":[1.608122101646576,1.1376373460008162,-3.045002804515536,-8.45309881278458,-15.716034024432846,-25.788534216774046],"type":"scatter"},{"legendgroup":"Measurements<br>(Detections)","legendrank":200,"marker":{"color":"#636EFA"},"mode":"markers","name":"Measurements<br>(Detections)","showlegend":true,"text":["TrueDetection<br>[[3.07964144]\n [8.48402685]]<br>2022-09-23 01:31:28.555588","TrueDetection<br>[[29.49213427]\n [24.10546926]]<br>2022-09-23 01:30:33.555588","TrueDetection<br>[[  4.85979545]\n [-16.2822385 ]]<br>2022-09-23 01:31:23.555588","TrueDetection<br>[[24.96466222]\n [19.67897823]]<br>2022-09-23 01:30:23.555588","TrueDetection<br>[[-3.73211628]\n [ 3.53537707]]<br>2022-09-23 01:31:23.555588","TrueDetection<br>[[38.41460425]\n [55.73648255]]<br>2022-09-23 01:31:08.555588","TrueDetection<br>[[  6.61019692]\n [-25.67825402]]<br>2022-09-23 01:31:28.555588","TrueDetection<br>[[50.35859875]\n [56.19753873]]<br>2022-09-23 01:31:28.555588","TrueDetection<br>[[16.14010839]\n [12.30256053]]<br>2022-09-23 01:30:13.555588","TrueDetection<br>[[-2.45364488]\n [ 3.1281264 ]]<br>2022-09-23 01:31:28.555588","TrueDetection<br>[[29.77152806]\n [34.58123971]]<br>2022-09-23 01:30:53.555588","TrueDetection<br>[[39.518    ]\n [61.6290385]]<br>2022-09-23 01:31:18.555588","TrueDetection<br>[[29.05688184]\n [22.54008018]]<br>2022-09-23 01:30:28.555588","TrueDetection<br>[[ 2.30461067]\n [-8.61228542]]<br>2022-09-23 01:31:18.555588","TrueDetection<br>[[39.68912912]\n [61.07065938]]<br>2022-09-23 01:31:13.555588","TrueDetection<br>[[27.0871937 ]\n [28.74926896]]<br>2022-09-23 01:30:43.555588","TrueDetection<br>[[-0.25693248]\n [ 5.12184995]]<br>2022-09-23 01:31:23.555588","TrueDetection<br>[[-0.58970278]\n [-3.18017086]]<br>2022-09-23 01:31:13.555588","TrueDetection<br>[[45.39709776]\n [60.82694042]]<br>2022-09-23 01:31:23.555588","TrueDetection<br>[[28.00448468]\n [26.79768058]]<br>2022-09-23 01:30:38.555588","TrueDetection<br>[[29.66042281]\n [41.76645631]]<br>2022-09-23 01:30:58.555588","TrueDetection<br>[[33.90089557]\n [49.2444235 ]]<br>2022-09-23 01:31:03.555588","TrueDetection<br>[[4.93127527]\n [2.5530763 ]]<br>2022-09-23 01:30:03.555588","TrueDetection<br>[[28.29606722]\n [30.25520554]]<br>2022-09-23 01:30:48.555588","TrueDetection<br>[[-1.11396676]\n [ 1.77931985]]<br>2022-09-23 01:31:03.555588","TrueDetection<br>[[20.75114941]\n [18.389161  ]]<br>2022-09-23 01:30:18.555588","TrueDetection<br>[[2.02535991]\n [4.25060475]]<br>2022-09-23 01:31:23.555588","TrueDetection<br>[[1.81062316]\n [0.75004739]]<br>2022-09-23 01:29:58.555588","TrueDetection<br>[[1.2707981 ]\n [8.39763045]]<br>2022-09-23 01:31:28.555588","TrueDetection<br>[[-1.36747322]\n [ 1.6462384 ]]<br>2022-09-23 01:31:08.555588"],"x":[3.0796414415180338,29.492134272029922,4.859795449599935,24.9646622202812,-3.732116275577672,38.41460424783047,6.610196923962659,50.35859875287904,16.14010839150814,-2.453644879468248,29.771528064062647,39.51799999989937,29.056881843203858,2.3046106652873704,39.689129118496396,27.087193702926108,-0.25693247612771875,-0.5897027792633707,45.397097761089725,28.004484676041425,29.660422805542815,33.90089556846898,4.931275274571622,28.296067221799735,-1.1139667588903504,20.75114940997747,2.025359914231305,1.8106231577852412,1.2707980996154218,-1.3674732158570966],"y":[8.484026845810893,24.105469256403985,-16.28223850251488,19.67897822991559,3.5353770731977434,55.736482550392054,-25.678254023963802,56.197538732499794,12.302560532716587,3.1281264010361958,34.58123971203089,61.62903850184004,22.54008017793158,-8.612285421042857,61.07065937655773,28.749268959575737,5.121849952212538,-3.1801708571268095,60.826940422137575,26.797680584352864,41.76645630731426,49.244423497380275,2.5530762994947525,30.255205539448166,1.779319850061221,18.38916099941764,4.250604753008506,0.7500473856420903,8.397630445787925,1.6462384001313903],"type":"scatter"},{"legendgroup":"Measurements<br>(Clutter)","legendrank":210,"marker":{"color":"#FECB52","symbol":"star-triangle-up"},"mode":"markers","name":"Measurements<br>(Clutter)","showlegend":true,"text":["Clutter<br>[[-16.75351379]\n [-23.12771751]]<br>2022-09-23 01:31:08.555588","Clutter<br>[[  5.94244292]\n [-24.958944  ]]<br>2022-09-23 01:30:53.555588","Clutter<br>[[-24.8133167 ]\n [ -8.11984823]]<br>2022-09-23 01:30:03.555588","Clutter<br>[[-4.620164 ]\n [ 7.6639546]]<br>2022-09-23 01:30:53.555588","Clutter<br>[[11.87356855]\n [-3.3310179 ]]<br>2022-09-23 01:30:03.555588","Clutter<br>[[-25.74681055]\n [ 23.56787384]]<br>2022-09-23 01:30:58.555588","Clutter<br>[[-16.53646381]\n [-27.69140479]]<br>2022-09-23 01:31:18.555588","Clutter<br>[[-8.54512717]\n [ 6.23552361]]<br>2022-09-23 01:30:03.555588","Clutter<br>[[ 27.38539328]\n [-26.99034129]]<br>2022-09-23 01:31:08.555588","Clutter<br>[[-21.61135515]\n [ -1.05337738]]<br>2022-09-23 01:30:18.555588","Clutter<br>[[-11.21702506]\n [ -6.71344582]]<br>2022-09-23 01:30:38.555588","Clutter<br>[[-22.18714555]\n [ -3.97481967]]<br>2022-09-23 01:30:53.555588","Clutter<br>[[-17.16328878]\n [ 27.34973029]]<br>2022-09-23 01:30:08.555588","Clutter<br>[[12.46812787]\n [19.70785326]]<br>2022-09-23 01:30:18.555588","Clutter<br>[[-26.02517973]\n [ 24.18088008]]<br>2022-09-23 01:30:58.555588","Clutter<br>[[-8.46279769]\n [-2.24995114]]<br>2022-09-23 01:30:43.555588","Clutter<br>[[  3.77456653]\n [-28.68127485]]<br>2022-09-23 01:30:33.555588","Clutter<br>[[ 9.87246667]\n [14.36729682]]<br>2022-09-23 01:31:13.555588","Clutter<br>[[-12.33035279]\n [ 11.2339632 ]]<br>2022-09-23 01:31:18.555588","Clutter<br>[[10.45659216]\n [ 8.42217783]]<br>2022-09-23 01:31:18.555588","Clutter<br>[[ -0.78956214]\n [-24.62354469]]<br>2022-09-23 01:31:08.555588","Clutter<br>[[17.57898677]\n [10.2346406 ]]<br>2022-09-23 01:29:58.555588"],"x":[-16.753513791806707,5.942442921171917,-24.81331670354275,-4.620164003224257,11.87356855467555,-25.746810551332842,-16.536463814399724,-8.545127168900429,27.385393284806874,-21.611355151781222,-11.217025061799355,-22.1871455496318,-17.16328878058346,12.468127872303022,-26.025179732537683,-8.462797688312204,3.7745665348578257,9.872466674568983,-12.330352786754752,10.4565921624325,-0.78956214038514,17.57898676510144],"y":[-23.12771751171087,-24.958944002397153,-8.119848227797192,7.663954599316824,-3.3310178983939984,23.56787384247098,-27.691404790276877,6.235523612882844,-26.990341290184638,-1.0533773778721631,-6.7134458212367605,-3.9748196650847873,27.349730286234724,19.70785326008179,24.180880079884382,-2.2499511428698504,-28.68127485091327,14.367296817057905,11.233963204129282,8.422177828172117,-24.623544689441097,10.234640596658117],"type":"scatter"},{"legendgroup":"Tracks","legendrank":300,"marker":{"symbol":["square","square","square","square","square","square","square","square","square","square","square","square","square","square","square","square"]},"mode":"markers+lines","name":"Tracks","showlegend":true,"text":["GaussianStateUpdate<br>[[16.14010839]\n [ 0.        ]\n [12.30256053]\n [ 0.        ]]<br>2022-09-23 01:30:13.555588","GaussianStateUpdate<br>[[20.67472332]\n [ 0.95532618]\n [18.28827812]\n [ 1.26103601]]<br>2022-09-23 01:30:18.555588","GaussianStateUpdate<br>[[24.98615532]\n [ 0.85305585]\n [19.89600953]\n [ 0.22833873]]<br>2022-09-23 01:30:23.555588","GaussianStateUpdate<br>[[29.0654717 ]\n [ 0.81215218]\n [22.47374753]\n [ 0.54420543]]<br>2022-09-23 01:30:28.555588","GaussianStateUpdate<br>[[29.65278316]\n [ 0.04807498]\n [24.15362307]\n [ 0.31517656]]<br>2022-09-23 01:30:33.555588","GaussianStateUpdate<br>[[28.08797528]\n [-0.34902303]\n [26.75046091]\n [ 0.5397628 ]]<br>2022-09-23 01:30:38.555588","GaussianStateUpdate<br>[[27.05428965]\n [-0.19252514]\n [28.78021346]\n [ 0.39258489]]<br>2022-09-23 01:30:43.555588","GaussianStateUpdate<br>[[28.19861925]\n [ 0.27095586]\n [30.27677511]\n [ 0.28999595]]<br>2022-09-23 01:30:48.555588","GaussianStateUpdate<br>[[29.76188542]\n [ 0.31681811]\n [34.45505419]\n [ 0.89015814]]<br>2022-09-23 01:30:53.555588","GaussianStateUpdate<br>[[ 2.97349345e+01]\n [-3.75734288e-02]\n [ 4.16400000e+01]\n [ 1.49160846e+00]]<br>2022-09-23 01:30:58.555588","GaussianStateUpdate<br>[[33.70842999]\n [ 0.87782926]\n [49.23795256]\n [ 1.52238546]]<br>2022-09-23 01:31:03.555588","GaussianStateUpdate<br>[[38.40058969]\n [ 0.94448514]\n [55.78570146]\n [ 1.28829104]]<br>2022-09-23 01:31:08.555588","GaussianStateUpdate<br>[[39.84092769]\n [ 0.22250243]\n [61.12178356]\n [ 1.04513475]]<br>2022-09-23 01:31:13.555588","GaussianStateUpdate<br>[[ 3.95814551e+01]\n [-7.93021914e-02]\n [ 6.18376212e+01]\n [ 5.30760356e-02]]<br>2022-09-23 01:31:18.555588","GaussianStateUpdate<br>[[45.12248295]\n [ 1.22681779]\n [60.88335005]\n [-0.2152188 ]]<br>2022-09-23 01:31:23.555588","GaussianStateUpdate<br>[[50.39829461]\n [ 1.03801681]\n [56.3571101 ]\n [-0.9741704 ]]<br>2022-09-23 01:31:28.555588"],"x":[16.14010839150814,20.674723315748697,24.986155317304792,29.065471695485652,29.652783160206397,28.08797527746224,27.054289650359216,28.198619246539497,29.761885418419673,29.7349344641021,33.70842998861465,38.40058969126779,39.840927690539914,39.581455135302875,45.122482945521,50.398294605219874],"y":[12.302560532716587,18.288278118754086,19.89600952952388,22.47374753073598,24.15362307330951,26.750460905258425,28.780213462180438,30.27677510662766,34.45505419269857,41.63999995636997,49.237952558889326,55.785701455830434,61.12178356178665,61.8376211932142,60.88335004522447,56.3571101025615],"type":"scatter"},{"legendgroup":"Tracks","legendrank":300,"marker":{"symbol":["square","square","square","square","square","square"]},"mode":"markers+lines","name":"34cf25bc-3d5a-4c2f-b1eb-03426cfa22b9","showlegend":false,"text":["GaussianStateUpdate<br>[[-1.11396676]\n [ 0.        ]\n [ 1.77931985]\n [ 0.        ]]<br>2022-09-23 01:31:03.555588","GaussianStateUpdate<br>[[-1.36327145]\n [-0.05252206]\n [ 1.64844417]\n [-0.02757212]]<br>2022-09-23 01:31:08.555588","GaussianStateUpdate<br>[[-0.6354621 ]\n [ 0.16521394]\n [-2.97301963]\n [-1.01325715]]<br>2022-09-23 01:31:13.555588","GaussianStateUpdate<br>[[ 2.21127363]\n [ 0.60967174]\n [-8.58698732]\n [-1.13372313]]<br>2022-09-23 01:31:18.555588","GaussianStateUpdate<br>[[  4.87747063]\n [  0.52560515]\n [-16.19264909]\n [ -1.55982773]]<br>2022-09-23 01:31:23.555588","GaussianStateUpdate<br>[[  6.64977449]\n [  0.33736634]\n [-25.60370218]\n [ -1.91441122]]<br>2022-09-23 01:31:28.555588"],"x":[-1.1139667588903504,-1.3632714513769848,-0.6354621002483848,2.2112736258406525,4.87747063152007,6.649774488229383],"y":[1.779319850061221,1.64844417001973,-2.973019634618622,-8.586987322136158,-16.192649086957175,-25.60370217844707],"type":"scatter"}],                        {"colorway":["#636EFA","#EF553B","#00CC96","#AB63FA","#FFA15A","#19D3F3","#FF6692","#B6E880","#FF97FF","#FECB52"],"xaxis":{"title":{"text":"<i>x</i>"}},"yaxis":{"scaleanchor":"x","scaleratio":1,"title":{"text":"<i>y</i>"}},"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}}},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.035 seconds)


.. _sphx_glr_download_auto_tutorials_10_Simulation_&_Tracking_Components.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/dstl/Smart-Fusion/main?filepath=notebooks/auto_tutorials/10_Simulation_%26_Tracking_Components.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 10_Simulation_&_Tracking_Components.py <10_Simulation_&_Tracking_Components.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 10_Simulation_&_Tracking_Components.ipynb <10_Simulation_&_Tracking_Components.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
